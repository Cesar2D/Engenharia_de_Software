O Desenvolvimento Ágil de Software se caracteriza pela eficácia na resposta a *mudanças*, *comunicação* entre stakeholders e produção *incremental* de software. O Manifesto Ágil destaca a valorização de indivíduos e interação, software em funcionamento, colaboração com o cliente e adaptação a mudanças. Os princípios da *Agile Alliance* priorizam a *entrega contínua* de valor, aceitação de mudanças, *colaboração* entre equipe e clientes, e foco em indivíduos motivados.

Os fatores humanos são fundamentais, adaptando o processo às necessidades das pessoas e equipes. Traços essenciais incluem competência, foco comum, colaboração, habilidade na tomada de decisão, habilidade de resolver problemas, confiança mútua, respeito e auto-organização. 

O Extreme Programming (XP) (Processo ágil muito utilizado) enfatiza comunicação, simplicidade, feedback, coragem e respeito, com práticas de *planejamento*, *projeto*, *codificação* e *teste*:
  * Planejamento: Criação e estimativa de custos das histórias de usuários, agrupadas em incrementos de software com datas de entrega definidas.
  * Projeto: Princípio KISS(Keep It Simple), uso de cartões CRC(Classe-Responsabilidade-Colaborador, cada cartão representa uma classe do sistema e lista suas responsabilidades e colaborações), prototipação para resolver dificuldades e refatoração(Refere-se ao processo de fazer alterações no código fonte de um programa de forma a melhorar sua estrutura interna sem alterar o comportamento).
  * Codificação: Construção de testes de unidade antes da codificação e programação em par(bastante usado no TSP).
  * Teste: Execução diária de testes de unidade e definição de testes de aceitação pelo cliente para avaliar funcionalidades.

No Scrum, papéis como Product Owner, Scrum Master e Scrum Team são essenciais, com processos de planejamento, revisão e retrospectiva da sprint. Para obter sucesso, focamos no fluxo contínuo de valor, interações frequentes e propriedade compartilhada, lidamos com incertezas por meio de adaptação, estimulamos a criatividade reconhecendo o papel dos indivíduos, impulsionamos o desempenho com comprometimento e responsabilidade compartilhada, e melhoramos eficácia e confiabilidade com estratégias específicas.Um projeto Scrum é iniciado quando o PO, responsável por obter informações do stakeholders, ou usuários que os representem, elaboram uma lista de requisitos e criam um Backlog de Produto(É uma lista dinâmica e priorizada de todos os requisitos, funcionalidades, melhorias e correções que precisam ser realizados em um produto de software). Na Sprint, as tarefas são identificadas com base nas histórias de usuários, estimadas e organizadas em um Quadro de Tarefas (Task Board). As reuniões diárias (Daily Scrum) duram 15 minutos e abordam o progresso, obstáculos e próximos passos, com atualização do Gráfico de Burndown. A revisão da Sprint, com o Product Owner, relata o trabalho feito e atualiza o roadmap(Refere-se a uma representação visual de alto nível dos objetivos, metas e direções futuras que uma equipe ou organização pretende seguir), enquanto a retrospectiva identifica o que funcionou, o que não funcionou e propõe melhorias para o próximo Sprint.

Kanban é um sistema de produção desenvolvido pela Toyota, utilizando cartões para controlar o fluxo de tarefas. Ele ajuda a visualizar processos, limitar o trabalho em progresso e gerenciar o tempo de entrega. É útil para manter um fluxo constante de trabalho, limitar o estresse da equipe e melhorar a colaboração e previsibilidade. No entanto, não é adequado quando os requisitos são estáveis desde o início, os clientes não colaboram frequentemente ou quando mudanças podem ser caras ou difíceis de implementar.

Métodos ágeis são indicados para ambientes com incerteza e necessidade de adaptação, mas não são adequados quando os requisitos são estáveis desde o início, os clientes não estão disponíveis para colaboração frequente, ou mudanças no final do projeto são caras ou impossíveis.
